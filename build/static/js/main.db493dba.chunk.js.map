{"version":3,"sources":["img/wifi-svg.svg","img/logo.svg","img/action-blue.svg","Login/login.js","Legal/back-button.js","Legal/terms-of-service.js","Legal/legal.js","white-surface.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Login","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","custId","errorMsg","errorStyle","handleChange","bind","assertThisInitialized","handleTabSelected","event","setState","target","value","activeTab","id","onClick","react_default","a","createElement","className","src","wifi","alt","onSubmit","handleSubmit","formAction","Component","BackButton","backButton","TermsOfService","href","Legal_back_button","Legal","key","tabItem1","tabItem2","terms_of_service","passedFunction","WhiteSurface","comp","isLogin","hidden","handleClick","changeActiveTab","Login_login","Legal_legal","tabSelected","logo","actionblue","Boolean","window","location","hostname","match","ReactDOM","render","src_white_surface","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.db493dba.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/wifi-svg.b0e25da0.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.bbd439b2.svg\";","module.exports = __webpack_public_path__ + \"static/media/action-blue.6062f80d.svg\";","import React, { Component } from 'react';\r\nimport './login.scss'\r\nimport wifi from '../img/wifi-svg.svg'\r\n\r\n\r\nclass Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            custId: '',\r\n            errorMsg: '',\r\n            errorStyle: '',\r\n        };\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        //this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleTabSelected = this.handleTabSelected.bind(this);\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({ custId: event.target.value })\r\n    }\r\n\r\n    handleTabSelected(event) {\r\n        const activeTab = event.target.id;\r\n        this.props.onClick(activeTab);\r\n    }\r\n\r\n\r\n    handleSubmit(event) {\r\n        //this.validateId(this.state.custId);\r\n\r\n        \r\n        //prevent from redireting \r\n        //alert(\"You clicked on connect\")\r\n        //event.preventDefault();\r\n\r\n        //to reset input after submit (only used when cutomerId entry field is enabled)\r\n        //this.setState({custId: ''})\r\n    }\r\n    \r\n    \r\n    /* ##Handle customer id validation on submit##\r\n    validateId(id, event) {\r\n        //dummy method to illustrate error msg when submitting id\r\n        if (id === \"\") {\r\n            this.setState({ errorMsg: 'Please enter your customer Id' })\r\n            this.setState({ errorStyle: \"1px solid red\" })\r\n        } else if (['1', '2', '3', '4'].includes(id)) {\r\n            this.setState({ errorMsg: '' })\r\n            this.setState({ errorStyle: \"\" })\r\n            alert('correct id')\r\n        } else {\r\n            this.setState({ errorMsg: 'Invalid customer Id' })\r\n            this.setState({ errorStyle: \"1px solid red\" })\r\n        };\r\n    } */\r\n\r\n    render() {\r\n        /* This is only used for customer id entry field\r\n        const errorStyle = {\r\n            border: this.state.errorStyle\r\n        }*/\r\n        return (\r\n\r\n            <div className=\"Login\">\r\n\r\n                <div className=\"img-wifi\">\r\n                    <img src={wifi} className=\"Wifi-SVG\" alt=\"wifi-logo\" />\r\n                </div>\r\n                <div className=\"text-container-login\">\r\n                    <h1 className=\"Free-Wi-Fi\">Free Wi-Fi</h1>\r\n                    <p className=\"Welcome-Onboard\">Welcome Onboard </p><br />\r\n                </div>\r\n\r\n                <form className=\"form-container\"  onSubmit={this.handleSubmit}>\r\n\r\n                    {/* ##This code will add a entry field for customer id##\r\n                    <label htmlFor=\"Customer_Id\">Customer Id</label><br />\r\n\r\n                    <input type=\"text\" id=\"Customer_Id\" placeholder=\"Printed on your boarding card\" style={errorStyle} value={this.state.custId} onChange={this.handleChange} />\r\n\r\n\r\n                    <span id=\"Validation\">\r\n                        {this.state.errorMsg}\r\n                    </span>\r\n                    */}\r\n                    <p ><br /> I agree to the <span onClick={this.handleTabSelected} id='tabItem2'>terms of service </span>\r\n                        and have reviewed the DFDS <span onClick={this.handleTabSelected} id='tabItem1' >privacy policy</span></p>\r\n\r\n\r\n                    <button className=\"submit-button\" formAction='dologin.html' >accept and connect</button>\r\n                </form>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default Login;","import React, { Component } from 'react';\r\nimport '../Legal/back-button.scss'\r\n\r\n\r\nclass BackButton extends Component {\r\n    render() {\r\n        return (\r\n            <button className=\"back-button\" onClick={() => this.props.backButton()}>\r\n                        Close\r\n                    </button>\r\n        );\r\n    }\r\n}\r\n\r\nexport default BackButton;","import React, { Component } from 'react';\r\nimport '../Legal/text-style.scss'\r\nimport BackButton from './back-button';\r\n\r\nclass TermsOfService extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"text-container-legal text-container-legal-T text-container-legal-D\">\r\n                    <p>This WiFi service (“the WiFi”) provided by DFDS A/S (“DFDS”), enables connectivity to the Internet while you are on board a DFDS vessel.\r\n                        The WiFi service is provided subject to these Terms and Conditions (“the T&C”).</p>\r\n\r\n                    <section>\r\n                        <h4>Restrictions on use</h4>\r\n                        <p>Certain material is inappropriate for minors or may be deemed offensive or objectionable. \r\n                            Please show consideration to your fellow passengers, including minors, and their rights when using the WiFi onboard.</p>\r\n                        <p>The WiFi may not be used for any unlawful, improper or criminal purpose or activity, including but not limited to hacking,\r\n                             spamming, introducing viruses, worms, harmful code and/or Trojan horses on the Internet.</p>\r\n                        <p> You may not post or transmit information or communications that, expressly or implied, are fraudulent, racist,\r\n                             hateful, harassing, obscene, pornographic, or otherwise improper as determined by DFDS in its sole discretion,\r\n                              or which violates any applicable local or international law, rule, order and/or regulation.</p>\r\n                        <p>You may not interfere with another person's usage or enjoyment of the WiFi or any other service provided\r\n                             by DFDS or to generate excessive amounts (as determined in our sole discretion) of WiFi traffic.</p>\r\n                        <p>You may not use the WiFi to violate our or any third party's copyright, trademark, proprietary or other intellectual property rights. </p>     \r\n                    </section>\r\n                    <section>\r\n                        <h4>Content</h4>\r\n                        <p>Neither DFDS nor any of its affiliates accepts any responsibility for goods, services, information, software or other material gained or lost while using WiFi. </p>\r\n                        <p>You agree to evaluate, and bear all risks associated with, the use of any content transmitted over the WiFi,\r\n                             including any reliance on the accuracy, completeness, or usefulness of such content. </p>\r\n                        <p>DFDS is not responsible for any content and will not pre-screen content transmitted by you over the WiFi, but DFDS shall have the right in its sole discretion to\r\n                             refuse or move any such content that is available via the WiFi, including without limitation any content that violates these T&C, or is otherwise objectionable.</p>\r\n                        <p>DFDS may preserve and disclose content if required to do so by law, or in the good faith belief that such preservation or disclosure is reasonably\r\n                             necessary to comply with legal process, enforce these T&C, or respond to claims that any content violates the rights of third-parties.</p>\r\n                    </section>\r\n                    <section>\r\n                        <h4>Limitation of DFDS’ Liability</h4>\r\n                        <p>Neither DFDS nor any of its affiliates accepts any responsibility for any malfunction to your equipment, or if the WiFi does not function on your equipment.</p>\r\n                        <p>The WiFi is provided on an a “as is” basis and DFDS does not warrant that the WiFi will be uninterrupted or error free,\r\n                             nor is any minimum upload or download speeds guaranteed. </p>\r\n                        <p>Neither DFDS nor any of its affiliates shall be liable for any direct, indirect,\r\n                             incidental, consequential or other damages arising out of the use of the WiFi or inability to use the WiFi. </p>\r\n                    </section>\r\n                    <section>\r\n                        <h4>Your obligation to indemnify DFDS</h4>\r\n                        <p>You agree to indemnify DFDS against all claims, liability, damages, costs and expenses, including but not limited to,\r\n                             reasonable attorney fees, arising out of or related to any and all use of your internet access account, including,\r\n                             but not limited to, any content transmitted over the service, your use of the WiFi, your violation of these T&C,\r\n                              and your violation of any rights of any other person.</p>\r\n                    </section>\r\n                    <section>\r\n                        <h4>Proprietary Rights</h4>\r\n                        <p>All copyrightable content distributed over the WiFi is copyrighted by the third-party content provider or DFDS, as applicable.\r\n                             DFDS and/or such third-party content providers own all right title and interest to such content and you may not copy, distribute, \r\n                             transmit or publish, in any form, including printed, electronic, digitized, audio or otherwise, or modify all or any portion of such \r\n                             content without the prior written consent of the copyright owner.  </p>\r\n                    </section>\r\n                    <section>\r\n                        <h4>Amendment of the T&C</h4>\r\n                        <p>The T&C may be amended by DFDS without notice.\r\n                             {/* ##NEED CORRECT LINK### The T&C in force at any time can be found here: \r\n                        <a href=\"[INSERT LINK]\">link</a>*/} </p> \r\n                    </section>\r\n                    <section>\r\n                        <h4>How DFDS processes your personal data</h4>\r\n                        <p>We process your personal data in accordance with the GDPR and our privacy notice which can be found here: \r\n                        <a href=\"http://www.dfds.com/en/legal/privacy\">www.dfds.com/en/legal/privacy</a></p>\r\n                    </section>\r\n                    <section>\r\n                        <h4>Choice of law and jurisdiction</h4>\r\n                        <p>The T&C are subject to Danish law.</p>\r\n                        <p>Any conflict that may arise from your use of the WiFi or these T&C must be brought before the Danish\r\n                             courts and must be filed for the competent court at DFDS' place of business. Consumer jurisdiction rules apply in cases between DFDS and consumers.</p>\r\n                    </section>\r\n                    <BackButton backButton={this.props.backButton} />\r\n                </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TermsOfService;","import React, { Component } from 'react';\r\n//import Tab from 'react-bootstrap/Tab'\r\n//import Nav from 'react-bootstrap/Nav'\r\n//import PrivacyPolicy from './privacy-policy'\r\nimport './legal.scss'\r\nimport TermsOfService from './terms-of-service'\r\n\r\n\r\nclass Legal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            key: this.props.activeTab,\r\n            tabItem1: '',\r\n            tabItem2: '',\r\n        };\r\n        //not used in vers. 1\r\n        // //set active tab\r\n        // if (this.state.key === 'tabItem1') {\r\n        //     this.state.tabItem1 = 'Tab-active'\r\n        //     this.state.tabItem2 = 'Tab-inactive-right'\r\n        // } else {\r\n        //      this.state.tabItem1 = 'Tab-inactive-left'\r\n        //      this.state.tabItem2 = 'Tab-active'\r\n        // }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Legal\">\r\n                <h2>Terms and Conditions for WiFi</h2>\r\n                <TermsOfService backButton={this.props.passedFunction} />\r\n\r\n                {/*Tab navbar is not used in vers. 1 */}\r\n                {/* <Tab.Container\r\n                    className=\"Tabs\"\r\n                    activeKey={this.state.key}\r\n                    onSelect={key => key === 'tabItem1' ?\r\n                        this.setState({ tabItem1: 'Tab-active', tabItem2: 'Tab-inactive-right', key: 'tabItem1' }) :\r\n                        this.setState({ tabItem1: 'Tab-inactive-left', tabItem2: 'Tab-active', key: 'tabItem2' })}>\r\n\r\n                    <Nav.Item eventKey=\"tabItem1\">\r\n                        <Nav.Link className={this.state.tabItem1} eventKey=\"tabItem1\">Privacy policy</Nav.Link>\r\n                    </Nav.Item>\r\n                    <Nav.Item eventKey=\"tabItem2\">\r\n                        <Nav.Link className={this.state.tabItem2} eventKey=\"tabItem2\">Terms of service</Nav.Link>\r\n                    </Nav.Item>\r\n\r\n                    <Tab.Content className=\"Tabs\">\r\n\r\n                        <Tab.Pane eventKey=\"tabItem1\">\r\n                            <PrivacyPolicy backButton={this.props.passedFunction} />\r\n                        </Tab.Pane>\r\n                        <Tab.Pane eventKey=\"tabItem2\">\r\n                            <TermsOfService backButton={this.props.passedFunction} />\r\n                        </Tab.Pane>\r\n\r\n                    </Tab.Content>\r\n                </Tab.Container> */}\r\n\r\n            </div>\r\n\r\n        );\r\n    }\r\n\r\n}\r\nexport default Legal;","import React, { Component } from 'react';\r\nimport './white-surface.scss';\r\n\r\nimport Login from './Login/login.js';\r\nimport Legal from './Legal/legal.js';\r\n\r\nimport logo from './img/logo.svg';\r\nimport actionblue from './img/action-blue.svg'\r\n\r\n\r\n\r\nclass WhiteSurface extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            comp: '',\r\n            isLogin: true,\r\n            hidden: true,\r\n            activeTab: ''\r\n        }\r\n        this.handleClick = this.handleClick.bind(this);\r\n        this.changeActiveTab = this.changeActiveTab.bind(this);\r\n        \r\n        this.state.comp = <Login onClick={this.changeActiveTab} />\r\n    }\r\n    \r\n    handleClick() {\r\n        this.state.isLogin ?\r\n            this.setState({ comp: <Legal passedFunction={this.handleClick} activeTab={this.state.activeTab}  />, isLogin: false, hidden: false }) : \r\n            this.setState({ comp: <Login onClick={this.changeActiveTab} />, isLogin: true, hidden: true })\r\n    }\r\n\r\n    changeActiveTab(tabSelected) {\r\n        this.setState({activeTab: tabSelected}, this.handleClick);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n                <div className=\"White-Surface White-Surface-T White-Surface-D\">\r\n                    <div className=\"header\">\r\n                        <img className=\"logo\" src={logo} alt=\"dfds-logo\" />\r\n                        {!this.state.hidden && \r\n                        <img className=\"Action-Blue\" src={actionblue} alt=\"close-icon\" onClick={this.handleClick} />}\r\n                    </div>\r\n                    {this.state.comp}\r\n                </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default WhiteSurface;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import \"babel-polyfill\"\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './resources/colors.scss';\nimport WhiteSurface from './white-surface'\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<WhiteSurface />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}